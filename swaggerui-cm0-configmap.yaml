apiVersion: v1
data:
  openapi.yaml: "openapi: 3.0.3\ninfo:\n  title: Personajes API\n  description: API para la gestión de personajes.\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@personajes.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n  - url: http://localhost:8080/business/rs/\ntags:\n  - name: personaje\n    description: Descripcion de personajes\npaths:\n  /personaje:\n    post:\n      tags:\n        - personaje\n      summary: Crear un nuevo personaje\n      description: Crear un nuevo personaje en la base de datos.\n      operationId: crearPersonaje\n      requestBody:\n        description: Datos del personaje a crear\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Personaje'\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Personaje'\n        '400':\n          description: Error al guardar el personaje\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      tags:\n        - personaje\n      summary: Actualizar un un personaje existente.\n      description: Actualizar los datos de un un personaje existente en la base de datos.\n      operationId: actualizarPersonaje\n      requestBody:\n        description: Datos del personaje a actualizar\n        required: true\n        content:\n          application/json:\n            schema:\n                  $ref: '#/components/schemas/PersonajePut'\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Personaje'\n        '406':\n          description: Error al actualizar el personaje\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    delete:\n      tags:\n        - personaje\n      summary: Borrar un personaje\n      description: Borrar un personaje de la base de datos.\n      operationId: borrarPersonaje\n      parameters:\n        - name: id\n          in: query\n          description: ID del personaje a borrar\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                type: integer\n        '500':\n          description: Error al borrar el personaje\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  /personaje/list:\n    get:\n      tags:\n        - personaje\n      summary: Obtener todos los personajes\n      description: Obtener todos los personajes\n      operationId: leerPersonajePorCodigo\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Personaje'\n        '404':\n          description: Personaje no encontrado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  /personaje/{codigo}:\n    get:\n      tags:\n        - personaje\n      summary: Obtener un personaje por su codigo\n      description: Obtener los datos de un personaje por su Codigo.\n      operationId: leerPersonajePorCodigo\n      parameters:\n        - name: codigo\n          in: path\n          description: Codigo del personaje a obtener\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Operación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Personaje'\n        '404':\n          description: Personaje no encontrado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\ncomponents:\n  schemas:\n    Personaje:\n      type: object\n      properties:\n        nombre:\n          type: string\n          example: 'Goku'\n        edad:\n          type: integer\n          example: 30\n        altura:\n          type: double\n          example: 1.75\n        peso:\n          type: double\n          example: 70.5\n        genero:\n          type: String\n          example: 'Hombre'\n        rol:\n          type: String\n          example: 'Peleador'\n          \n    PersonajePut:\n      type: object\n      properties:\n        codigo:\n          type: integer\n          format: int64\n          example: 1\n        nombre:\n          type: string\n          example: 'Goku'\n        edad:\n          type: integer\n          example: 30\n        altura:\n          type: double\n          example: 1.75\n        peso:\n          type: double\n          example: 70.5\n        genero:\n          type: String\n          example: 'Hombre'\n        rol:\n          type: String\n          example: 'Peleador'\n        \n    ErrorMessage:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string"
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: swaggerui
  name: swaggerui-cm0
